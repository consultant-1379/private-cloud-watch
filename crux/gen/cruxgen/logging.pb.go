// Code generated by protoc-gen-go. DO NOT EDIT.
// source: logging.proto

package cruxgen

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Do not rely on these mapping to the underlying logging package's levels
type LogLevel int32

const (
	LogLevel_PANIC    LogLevel = 0
	LogLevel_FATAL    LogLevel = 1
	LogLevel_ERROR    LogLevel = 2
	LogLevel_WARN     LogLevel = 3
	LogLevel_INFO     LogLevel = 4
	LogLevel_DEBUG    LogLevel = 5
	LogLevel_NOCHANGE LogLevel = 6
)

var LogLevel_name = map[int32]string{
	0: "PANIC",
	1: "FATAL",
	2: "ERROR",
	3: "WARN",
	4: "INFO",
	5: "DEBUG",
	6: "NOCHANGE",
}

var LogLevel_value = map[string]int32{
	"PANIC":    0,
	"FATAL":    1,
	"ERROR":    2,
	"WARN":     3,
	"INFO":     4,
	"DEBUG":    5,
	"NOCHANGE": 6,
}

func (x LogLevel) String() string {
	return proto.EnumName(LogLevel_name, int32(x))
}

func (LogLevel) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9c8ad1e4de00dd2b, []int{0}
}

// Add to the current logging spec. modules with logging enabled are not affected
// VS. this overrides the current module list
type LoggingDef struct {
	Level                LogLevel `protobuf:"varint,1,opt,name=level,proto3,enum=cruxgen.LogLevel" json:"level,omitempty"`
	Data                 bool     `protobuf:"varint,2,opt,name=data,proto3" json:"data,omitempty"`
	Module               string   `protobuf:"bytes,3,opt,name=module,proto3" json:"module,omitempty"`
	Node                 string   `protobuf:"bytes,4,opt,name=node,proto3" json:"node,omitempty"`
	Outfile              string   `protobuf:"bytes,5,opt,name=outfile,proto3" json:"outfile,omitempty"`
	Format               string   `protobuf:"bytes,6,opt,name=format,proto3" json:"format,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoggingDef) Reset()         { *m = LoggingDef{} }
func (m *LoggingDef) String() string { return proto.CompactTextString(m) }
func (*LoggingDef) ProtoMessage()    {}
func (*LoggingDef) Descriptor() ([]byte, []int) {
	return fileDescriptor_9c8ad1e4de00dd2b, []int{0}
}

func (m *LoggingDef) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoggingDef.Unmarshal(m, b)
}
func (m *LoggingDef) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoggingDef.Marshal(b, m, deterministic)
}
func (m *LoggingDef) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoggingDef.Merge(m, src)
}
func (m *LoggingDef) XXX_Size() int {
	return xxx_messageInfo_LoggingDef.Size(m)
}
func (m *LoggingDef) XXX_DiscardUnknown() {
	xxx_messageInfo_LoggingDef.DiscardUnknown(m)
}

var xxx_messageInfo_LoggingDef proto.InternalMessageInfo

func (m *LoggingDef) GetLevel() LogLevel {
	if m != nil {
		return m.Level
	}
	return LogLevel_PANIC
}

func (m *LoggingDef) GetData() bool {
	if m != nil {
		return m.Data
	}
	return false
}

func (m *LoggingDef) GetModule() string {
	if m != nil {
		return m.Module
	}
	return ""
}

func (m *LoggingDef) GetNode() string {
	if m != nil {
		return m.Node
	}
	return ""
}

func (m *LoggingDef) GetOutfile() string {
	if m != nil {
		return m.Outfile
	}
	return ""
}

func (m *LoggingDef) GetFormat() string {
	if m != nil {
		return m.Format
	}
	return ""
}

type LogResponse struct {
	ChangeMade           bool     `protobuf:"varint,1,opt,name=changeMade,proto3" json:"changeMade,omitempty"`
	Error                string   `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogResponse) Reset()         { *m = LogResponse{} }
func (m *LogResponse) String() string { return proto.CompactTextString(m) }
func (*LogResponse) ProtoMessage()    {}
func (*LogResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9c8ad1e4de00dd2b, []int{1}
}

func (m *LogResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogResponse.Unmarshal(m, b)
}
func (m *LogResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogResponse.Marshal(b, m, deterministic)
}
func (m *LogResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogResponse.Merge(m, src)
}
func (m *LogResponse) XXX_Size() int {
	return xxx_messageInfo_LogResponse.Size(m)
}
func (m *LogResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LogResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LogResponse proto.InternalMessageInfo

func (m *LogResponse) GetChangeMade() bool {
	if m != nil {
		return m.ChangeMade
	}
	return false
}

func (m *LogResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

// Turn off all debugging
type LoggingOff struct {
	Off                  bool     `protobuf:"varint,1,opt,name=off,proto3" json:"off,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoggingOff) Reset()         { *m = LoggingOff{} }
func (m *LoggingOff) String() string { return proto.CompactTextString(m) }
func (*LoggingOff) ProtoMessage()    {}
func (*LoggingOff) Descriptor() ([]byte, []int) {
	return fileDescriptor_9c8ad1e4de00dd2b, []int{2}
}

func (m *LoggingOff) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoggingOff.Unmarshal(m, b)
}
func (m *LoggingOff) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoggingOff.Marshal(b, m, deterministic)
}
func (m *LoggingOff) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoggingOff.Merge(m, src)
}
func (m *LoggingOff) XXX_Size() int {
	return xxx_messageInfo_LoggingOff.Size(m)
}
func (m *LoggingOff) XXX_DiscardUnknown() {
	xxx_messageInfo_LoggingOff.DiscardUnknown(m)
}

var xxx_messageInfo_LoggingOff proto.InternalMessageInfo

func (m *LoggingOff) GetOff() bool {
	if m != nil {
		return m.Off
	}
	return false
}

func init() {
	proto.RegisterEnum("cruxgen.LogLevel", LogLevel_name, LogLevel_value)
	proto.RegisterType((*LoggingDef)(nil), "cruxgen.LoggingDef")
	proto.RegisterType((*LogResponse)(nil), "cruxgen.LogResponse")
	proto.RegisterType((*LoggingOff)(nil), "cruxgen.LoggingOff")
}

func init() { proto.RegisterFile("logging.proto", fileDescriptor_9c8ad1e4de00dd2b) }

var fileDescriptor_9c8ad1e4de00dd2b = []byte{
	// 353 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x92, 0x41, 0x6f, 0xaa, 0x40,
	0x10, 0xc7, 0x45, 0x01, 0x71, 0xde, 0x7b, 0x66, 0xdf, 0x3e, 0xf3, 0x42, 0x7a, 0x30, 0x86, 0x4b,
	0x4d, 0x0f, 0x1e, 0xec, 0xa9, 0x87, 0x1e, 0xa8, 0xa8, 0x35, 0xa1, 0xd0, 0x6c, 0xdb, 0xb4, 0x57,
	0x94, 0x59, 0x4a, 0x82, 0xac, 0x41, 0x6c, 0xda, 0xaf, 0xd0, 0x2f, 0xd2, 0xaf, 0xd9, 0xec, 0x02,
	0x8d, 0x17, 0x6f, 0xbf, 0xff, 0xff, 0x3f, 0x33, 0x99, 0x81, 0x85, 0x3f, 0x99, 0x48, 0x92, 0x34,
	0x4f, 0x26, 0xbb, 0x42, 0x94, 0x82, 0x76, 0x37, 0xc5, 0xe1, 0x3d, 0xc1, 0xdc, 0xf9, 0xd2, 0x00,
	0xfc, 0x2a, 0xf2, 0x90, 0xd3, 0x73, 0x30, 0x32, 0x7c, 0xc3, 0xcc, 0xd6, 0x46, 0xda, 0xb8, 0x3f,
	0xfd, 0x3b, 0xa9, 0xeb, 0x26, 0xbe, 0x48, 0x7c, 0x19, 0xb0, 0x2a, 0xa7, 0x14, 0xf4, 0x38, 0x2a,
	0x23, 0xbb, 0x3d, 0xd2, 0xc6, 0x16, 0x53, 0x4c, 0xff, 0x83, 0xb9, 0x15, 0xf1, 0x21, 0x43, 0xbb,
	0x33, 0xd2, 0xc6, 0x3d, 0x56, 0x2b, 0x59, 0x9b, 0x8b, 0x18, 0x6d, 0x5d, 0xb9, 0x8a, 0xa9, 0x0d,
	0x5d, 0x71, 0x28, 0x79, 0x9a, 0xa1, 0x6d, 0x28, 0xbb, 0x91, 0x72, 0x0a, 0x17, 0xc5, 0x36, 0x2a,
	0x6d, 0xb3, 0x9a, 0x52, 0x29, 0x67, 0x06, 0xbf, 0x7c, 0x91, 0x30, 0xdc, 0xef, 0x44, 0xbe, 0x47,
	0x3a, 0x04, 0xd8, 0xbc, 0x46, 0x79, 0x82, 0x77, 0x51, 0x8c, 0x6a, 0x5d, 0x8b, 0x1d, 0x39, 0x74,
	0x00, 0x06, 0x16, 0x85, 0x28, 0xd4, 0x86, 0x3d, 0x56, 0x09, 0x67, 0xf8, 0x73, 0x6d, 0xc8, 0x39,
	0x25, 0xd0, 0x11, 0x9c, 0xd7, 0xcd, 0x12, 0x2f, 0x5e, 0xc0, 0x6a, 0x2e, 0xa5, 0x3d, 0x30, 0xee,
	0xdd, 0x60, 0x35, 0x23, 0x2d, 0x89, 0x0b, 0xf7, 0xd1, 0xf5, 0x89, 0x26, 0x71, 0xce, 0x58, 0xc8,
	0x48, 0x9b, 0x5a, 0xa0, 0x3f, 0xbb, 0x2c, 0x20, 0x1d, 0x49, 0xab, 0x60, 0x11, 0x12, 0x5d, 0xc6,
	0xde, 0xfc, 0xe6, 0x69, 0x49, 0x0c, 0xfa, 0x1b, 0xac, 0x20, 0x9c, 0xdd, 0xba, 0xc1, 0x72, 0x4e,
	0xcc, 0xe9, 0xa7, 0x06, 0x7d, 0xef, 0x23, 0x8f, 0xb6, 0xe9, 0xa6, 0xde, 0x80, 0x5e, 0x01, 0x3c,
	0x60, 0xd9, 0xa8, 0x7f, 0xc7, 0xdf, 0xba, 0xfe, 0x1f, 0x67, 0x83, 0x63, 0xb3, 0xb9, 0xdd, 0x69,
	0xd1, 0x6b, 0xe8, 0x7b, 0xe9, 0x3e, 0x5a, 0x67, 0x78, 0xb2, 0x3d, 0xe4, 0x27, 0xdb, 0xd7, 0xa6,
	0x7a, 0x05, 0x97, 0xdf, 0x01, 0x00, 0x00, 0xff, 0xff, 0xcb, 0x62, 0xb3, 0x01, 0x16, 0x02, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DynamicLoggingClient is the client API for DynamicLogging service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DynamicLoggingClient interface {
	SetLogging(ctx context.Context, in *LoggingDef, opts ...grpc.CallOption) (*LogResponse, error)
	DisableLogging(ctx context.Context, in *LoggingOff, opts ...grpc.CallOption) (*LogResponse, error)
}

type dynamicLoggingClient struct {
	cc *grpc.ClientConn
}

func NewDynamicLoggingClient(cc *grpc.ClientConn) DynamicLoggingClient {
	return &dynamicLoggingClient{cc}
}

func (c *dynamicLoggingClient) SetLogging(ctx context.Context, in *LoggingDef, opts ...grpc.CallOption) (*LogResponse, error) {
	out := new(LogResponse)
	err := c.cc.Invoke(ctx, "/cruxgen.DynamicLogging/SetLogging", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynamicLoggingClient) DisableLogging(ctx context.Context, in *LoggingOff, opts ...grpc.CallOption) (*LogResponse, error) {
	out := new(LogResponse)
	err := c.cc.Invoke(ctx, "/cruxgen.DynamicLogging/DisableLogging", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DynamicLoggingServer is the server API for DynamicLogging service.
type DynamicLoggingServer interface {
	SetLogging(context.Context, *LoggingDef) (*LogResponse, error)
	DisableLogging(context.Context, *LoggingOff) (*LogResponse, error)
}

func RegisterDynamicLoggingServer(s *grpc.Server, srv DynamicLoggingServer) {
	s.RegisterService(&_DynamicLogging_serviceDesc, srv)
}

func _DynamicLogging_SetLogging_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoggingDef)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynamicLoggingServer).SetLogging(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cruxgen.DynamicLogging/SetLogging",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynamicLoggingServer).SetLogging(ctx, req.(*LoggingDef))
	}
	return interceptor(ctx, in, info, handler)
}

func _DynamicLogging_DisableLogging_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoggingOff)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynamicLoggingServer).DisableLogging(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cruxgen.DynamicLogging/DisableLogging",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynamicLoggingServer).DisableLogging(ctx, req.(*LoggingOff))
	}
	return interceptor(ctx, in, info, handler)
}

var _DynamicLogging_serviceDesc = grpc.ServiceDesc{
	ServiceName: "cruxgen.DynamicLogging",
	HandlerType: (*DynamicLoggingServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SetLogging",
			Handler:    _DynamicLogging_SetLogging_Handler,
		},
		{
			MethodName: "DisableLogging",
			Handler:    _DynamicLogging_DisableLogging_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "logging.proto",
}
