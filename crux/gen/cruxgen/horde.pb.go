// Code generated by protoc-gen-go. DO NOT EDIT.
// source: horde.proto

package cruxgen

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ProcessCmd_CmdType int32

const (
	ProcessCmd_QUIT ProcessCmd_CmdType = 0
)

var ProcessCmd_CmdType_name = map[int32]string{
	0: "QUIT",
}

var ProcessCmd_CmdType_value = map[string]int32{
	"QUIT": 0,
}

func (x ProcessCmd_CmdType) String() string {
	return proto.EnumName(ProcessCmd_CmdType_name, int32(x))
}

func (ProcessCmd_CmdType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_8f218ef9d048aa6f, []int{0, 0}
}

type Process_Status int32

const (
	Process_UNKOWN  Process_Status = 0
	Process_RUNNING Process_Status = 1
	Process_HALTING Process_Status = 2
	Process_EXITED  Process_Status = 3
)

var Process_Status_name = map[int32]string{
	0: "UNKOWN",
	1: "RUNNING",
	2: "HALTING",
	3: "EXITED",
}

var Process_Status_value = map[string]int32{
	"UNKOWN":  0,
	"RUNNING": 1,
	"HALTING": 2,
	"EXITED":  3,
}

func (x Process_Status) String() string {
	return proto.EnumName(Process_Status_name, int32(x))
}

func (Process_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_8f218ef9d048aa6f, []int{1, 0}
}

type ProcessCmd struct {
	Type                 ProcessCmd_CmdType `protobuf:"varint,1,opt,name=type,proto3,enum=cruxgen.ProcessCmd_CmdType" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *ProcessCmd) Reset()         { *m = ProcessCmd{} }
func (m *ProcessCmd) String() string { return proto.CompactTextString(m) }
func (*ProcessCmd) ProtoMessage()    {}
func (*ProcessCmd) Descriptor() ([]byte, []int) {
	return fileDescriptor_8f218ef9d048aa6f, []int{0}
}

func (m *ProcessCmd) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProcessCmd.Unmarshal(m, b)
}
func (m *ProcessCmd) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProcessCmd.Marshal(b, m, deterministic)
}
func (m *ProcessCmd) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProcessCmd.Merge(m, src)
}
func (m *ProcessCmd) XXX_Size() int {
	return xxx_messageInfo_ProcessCmd.Size(m)
}
func (m *ProcessCmd) XXX_DiscardUnknown() {
	xxx_messageInfo_ProcessCmd.DiscardUnknown(m)
}

var xxx_messageInfo_ProcessCmd proto.InternalMessageInfo

func (m *ProcessCmd) GetType() ProcessCmd_CmdType {
	if m != nil {
		return m.Type
	}
	return ProcessCmd_QUIT
}

type Process struct {
	Status               Process_Status    `protobuf:"varint,1,opt,name=status,proto3,enum=cruxgen.Process_Status" json:"status,omitempty"`
	Role                 string            `protobuf:"bytes,2,opt,name=role,proto3" json:"role,omitempty"`
	Node                 string            `protobuf:"bytes,3,opt,name=node,proto3" json:"node,omitempty"`
	Pid                  int64             `protobuf:"varint,4,opt,name=pid,proto3" json:"pid,omitempty"`
	UUID                 string            `protobuf:"bytes,5,opt,name=UUID,proto3" json:"UUID,omitempty"`
	Attrs                map[string]string `protobuf:"bytes,6,rep,name=attrs,proto3" json:"attrs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Process) Reset()         { *m = Process{} }
func (m *Process) String() string { return proto.CompactTextString(m) }
func (*Process) ProtoMessage()    {}
func (*Process) Descriptor() ([]byte, []int) {
	return fileDescriptor_8f218ef9d048aa6f, []int{1}
}

func (m *Process) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Process.Unmarshal(m, b)
}
func (m *Process) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Process.Marshal(b, m, deterministic)
}
func (m *Process) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Process.Merge(m, src)
}
func (m *Process) XXX_Size() int {
	return xxx_messageInfo_Process.Size(m)
}
func (m *Process) XXX_DiscardUnknown() {
	xxx_messageInfo_Process.DiscardUnknown(m)
}

var xxx_messageInfo_Process proto.InternalMessageInfo

func (m *Process) GetStatus() Process_Status {
	if m != nil {
		return m.Status
	}
	return Process_UNKOWN
}

func (m *Process) GetRole() string {
	if m != nil {
		return m.Role
	}
	return ""
}

func (m *Process) GetNode() string {
	if m != nil {
		return m.Node
	}
	return ""
}

func (m *Process) GetPid() int64 {
	if m != nil {
		return m.Pid
	}
	return 0
}

func (m *Process) GetUUID() string {
	if m != nil {
		return m.UUID
	}
	return ""
}

func (m *Process) GetAttrs() map[string]string {
	if m != nil {
		return m.Attrs
	}
	return nil
}

func init() {
	proto.RegisterEnum("cruxgen.ProcessCmd_CmdType", ProcessCmd_CmdType_name, ProcessCmd_CmdType_value)
	proto.RegisterEnum("cruxgen.Process_Status", Process_Status_name, Process_Status_value)
	proto.RegisterType((*ProcessCmd)(nil), "cruxgen.ProcessCmd")
	proto.RegisterType((*Process)(nil), "cruxgen.Process")
	proto.RegisterMapType((map[string]string)(nil), "cruxgen.Process.AttrsEntry")
}

func init() { proto.RegisterFile("horde.proto", fileDescriptor_8f218ef9d048aa6f) }

var fileDescriptor_8f218ef9d048aa6f = []byte{
	// 297 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x91, 0x4f, 0x4b, 0xc3, 0x40,
	0x10, 0xc5, 0xbb, 0xf9, 0x6b, 0x27, 0x20, 0x61, 0x15, 0x5c, 0xf4, 0x12, 0x72, 0xca, 0x69, 0x8b,
	0x7a, 0x29, 0xbd, 0x95, 0x36, 0x68, 0x50, 0xa2, 0xae, 0x09, 0x7a, 0x8d, 0xcd, 0xa2, 0x62, 0x9b,
	0x0d, 0x9b, 0x8d, 0x98, 0x8f, 0xe5, 0x37, 0x94, 0x4d, 0x22, 0x05, 0xbd, 0xbd, 0xf7, 0xe6, 0xb7,
	0xb3, 0x33, 0x0c, 0x78, 0x6f, 0x42, 0x96, 0x9c, 0xd6, 0x52, 0x28, 0x81, 0xdd, 0x8d, 0x6c, 0xbf,
	0x5e, 0x79, 0x15, 0x32, 0x80, 0x7b, 0x29, 0x36, 0xbc, 0x69, 0x56, 0xbb, 0x12, 0xcf, 0xc0, 0x52,
	0x5d, 0xcd, 0x09, 0x0a, 0x50, 0x74, 0x78, 0x71, 0x46, 0x47, 0x8a, 0xee, 0x11, 0xba, 0xda, 0x95,
	0x59, 0x57, 0x73, 0xd6, 0x83, 0xe1, 0x11, 0xb8, 0x63, 0x80, 0x0f, 0xc0, 0x7a, 0xc8, 0x93, 0xcc,
	0x9f, 0x84, 0xdf, 0x06, 0xb8, 0xe3, 0x0b, 0x3c, 0x03, 0xa7, 0x51, 0x85, 0x6a, 0x9b, 0xb1, 0xe7,
	0xc9, 0xdf, 0x9e, 0xf4, 0xb1, 0x2f, 0xb3, 0x11, 0xc3, 0x18, 0x2c, 0x29, 0xb6, 0x9c, 0x18, 0x01,
	0x8a, 0xa6, 0xac, 0xd7, 0x3a, 0xab, 0x44, 0xc9, 0x89, 0x39, 0x64, 0x5a, 0x63, 0x1f, 0xcc, 0xfa,
	0xbd, 0x24, 0x56, 0x80, 0x22, 0x93, 0x69, 0xa9, 0xa9, 0x3c, 0x4f, 0xd6, 0xc4, 0x1e, 0x28, 0xad,
	0xf1, 0x39, 0xd8, 0x85, 0x52, 0xb2, 0x21, 0x4e, 0x60, 0x46, 0xde, 0xff, 0x8d, 0xe8, 0x52, 0x57,
	0xe3, 0x4a, 0xc9, 0x8e, 0x0d, 0xe4, 0xe9, 0x1c, 0x60, 0x1f, 0xea, 0x6f, 0x3e, 0x78, 0xd7, 0x0f,
	0x3f, 0x65, 0x5a, 0xe2, 0x63, 0xb0, 0x3f, 0x8b, 0x6d, 0xfb, 0x3b, 0xe1, 0x60, 0x16, 0xc6, 0x1c,
	0x85, 0x0b, 0x70, 0x86, 0x65, 0x30, 0x80, 0x93, 0xa7, 0x37, 0x77, 0x4f, 0xa9, 0x3f, 0xc1, 0x1e,
	0xb8, 0x2c, 0x4f, 0xd3, 0x24, 0xbd, 0xf2, 0x91, 0x36, 0xd7, 0xcb, 0xdb, 0x4c, 0x1b, 0x43, 0x53,
	0xf1, 0x73, 0x92, 0xc5, 0x6b, 0xdf, 0x7c, 0x71, 0xfa, 0xbb, 0x5c, 0xfe, 0x04, 0x00, 0x00, 0xff,
	0xff, 0xca, 0x3c, 0xb8, 0x26, 0xa6, 0x01, 0x00, 0x00,
}
