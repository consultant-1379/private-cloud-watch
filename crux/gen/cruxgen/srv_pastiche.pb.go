// Code generated by protoc-gen-go. DO NOT EDIT.
// source: srv_pastiche.proto

package cruxgen

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RegisterFileRequest struct {
	Hash                 string   `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Path                 string   `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterFileRequest) Reset()         { *m = RegisterFileRequest{} }
func (m *RegisterFileRequest) String() string { return proto.CompactTextString(m) }
func (*RegisterFileRequest) ProtoMessage()    {}
func (*RegisterFileRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33143b984c54841e, []int{0}
}

func (m *RegisterFileRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterFileRequest.Unmarshal(m, b)
}
func (m *RegisterFileRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterFileRequest.Marshal(b, m, deterministic)
}
func (m *RegisterFileRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterFileRequest.Merge(m, src)
}
func (m *RegisterFileRequest) XXX_Size() int {
	return xxx_messageInfo_RegisterFileRequest.Size(m)
}
func (m *RegisterFileRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterFileRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterFileRequest proto.InternalMessageInfo

func (m *RegisterFileRequest) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *RegisterFileRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

type RegisterFileResponse struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Err                  *Err     `protobuf:"bytes,2,opt,name=err,proto3" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterFileResponse) Reset()         { *m = RegisterFileResponse{} }
func (m *RegisterFileResponse) String() string { return proto.CompactTextString(m) }
func (*RegisterFileResponse) ProtoMessage()    {}
func (*RegisterFileResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_33143b984c54841e, []int{1}
}

func (m *RegisterFileResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterFileResponse.Unmarshal(m, b)
}
func (m *RegisterFileResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterFileResponse.Marshal(b, m, deterministic)
}
func (m *RegisterFileResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterFileResponse.Merge(m, src)
}
func (m *RegisterFileResponse) XXX_Size() int {
	return xxx_messageInfo_RegisterFileResponse.Size(m)
}
func (m *RegisterFileResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterFileResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterFileResponse proto.InternalMessageInfo

func (m *RegisterFileResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *RegisterFileResponse) GetErr() *Err {
	if m != nil {
		return m.Err
	}
	return nil
}

type ReserveRequest struct {
	Hash                 string   `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Reserve              bool     `protobuf:"varint,2,opt,name=reserve,proto3" json:"reserve,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReserveRequest) Reset()         { *m = ReserveRequest{} }
func (m *ReserveRequest) String() string { return proto.CompactTextString(m) }
func (*ReserveRequest) ProtoMessage()    {}
func (*ReserveRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33143b984c54841e, []int{2}
}

func (m *ReserveRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReserveRequest.Unmarshal(m, b)
}
func (m *ReserveRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReserveRequest.Marshal(b, m, deterministic)
}
func (m *ReserveRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReserveRequest.Merge(m, src)
}
func (m *ReserveRequest) XXX_Size() int {
	return xxx_messageInfo_ReserveRequest.Size(m)
}
func (m *ReserveRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReserveRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReserveRequest proto.InternalMessageInfo

func (m *ReserveRequest) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *ReserveRequest) GetReserve() bool {
	if m != nil {
		return m.Reserve
	}
	return false
}

type ReserveResponse struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Time                 int64    `protobuf:"varint,2,opt,name=time,proto3" json:"time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReserveResponse) Reset()         { *m = ReserveResponse{} }
func (m *ReserveResponse) String() string { return proto.CompactTextString(m) }
func (*ReserveResponse) ProtoMessage()    {}
func (*ReserveResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_33143b984c54841e, []int{3}
}

func (m *ReserveResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReserveResponse.Unmarshal(m, b)
}
func (m *ReserveResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReserveResponse.Marshal(b, m, deterministic)
}
func (m *ReserveResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReserveResponse.Merge(m, src)
}
func (m *ReserveResponse) XXX_Size() int {
	return xxx_messageInfo_ReserveResponse.Size(m)
}
func (m *ReserveResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReserveResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReserveResponse proto.InternalMessageInfo

func (m *ReserveResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *ReserveResponse) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

type DeleteRequest struct {
	Hash                 string   `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteRequest) Reset()         { *m = DeleteRequest{} }
func (m *DeleteRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteRequest) ProtoMessage()    {}
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33143b984c54841e, []int{4}
}

func (m *DeleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteRequest.Unmarshal(m, b)
}
func (m *DeleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteRequest.Marshal(b, m, deterministic)
}
func (m *DeleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteRequest.Merge(m, src)
}
func (m *DeleteRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteRequest.Size(m)
}
func (m *DeleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteRequest proto.InternalMessageInfo

func (m *DeleteRequest) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

type DeleteResponse struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteResponse) Reset()         { *m = DeleteResponse{} }
func (m *DeleteResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteResponse) ProtoMessage()    {}
func (*DeleteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_33143b984c54841e, []int{5}
}

func (m *DeleteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteResponse.Unmarshal(m, b)
}
func (m *DeleteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteResponse.Marshal(b, m, deterministic)
}
func (m *DeleteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteResponse.Merge(m, src)
}
func (m *DeleteResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteResponse.Size(m)
}
func (m *DeleteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteResponse proto.InternalMessageInfo

func (m *DeleteResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type DeleteAllRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteAllRequest) Reset()         { *m = DeleteAllRequest{} }
func (m *DeleteAllRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteAllRequest) ProtoMessage()    {}
func (*DeleteAllRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33143b984c54841e, []int{6}
}

func (m *DeleteAllRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteAllRequest.Unmarshal(m, b)
}
func (m *DeleteAllRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteAllRequest.Marshal(b, m, deterministic)
}
func (m *DeleteAllRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteAllRequest.Merge(m, src)
}
func (m *DeleteAllRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteAllRequest.Size(m)
}
func (m *DeleteAllRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteAllRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteAllRequest proto.InternalMessageInfo

type DeleteAllResponse struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteAllResponse) Reset()         { *m = DeleteAllResponse{} }
func (m *DeleteAllResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteAllResponse) ProtoMessage()    {}
func (*DeleteAllResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_33143b984c54841e, []int{7}
}

func (m *DeleteAllResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteAllResponse.Unmarshal(m, b)
}
func (m *DeleteAllResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteAllResponse.Marshal(b, m, deterministic)
}
func (m *DeleteAllResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteAllResponse.Merge(m, src)
}
func (m *DeleteAllResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteAllResponse.Size(m)
}
func (m *DeleteAllResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteAllResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteAllResponse proto.InternalMessageInfo

func (m *DeleteAllResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type AddFilesFromDirRequest struct {
	Dirpath              string   `protobuf:"bytes,1,opt,name=dirpath,proto3" json:"dirpath,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddFilesFromDirRequest) Reset()         { *m = AddFilesFromDirRequest{} }
func (m *AddFilesFromDirRequest) String() string { return proto.CompactTextString(m) }
func (*AddFilesFromDirRequest) ProtoMessage()    {}
func (*AddFilesFromDirRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33143b984c54841e, []int{8}
}

func (m *AddFilesFromDirRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddFilesFromDirRequest.Unmarshal(m, b)
}
func (m *AddFilesFromDirRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddFilesFromDirRequest.Marshal(b, m, deterministic)
}
func (m *AddFilesFromDirRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddFilesFromDirRequest.Merge(m, src)
}
func (m *AddFilesFromDirRequest) XXX_Size() int {
	return xxx_messageInfo_AddFilesFromDirRequest.Size(m)
}
func (m *AddFilesFromDirRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddFilesFromDirRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddFilesFromDirRequest proto.InternalMessageInfo

func (m *AddFilesFromDirRequest) GetDirpath() string {
	if m != nil {
		return m.Dirpath
	}
	return ""
}

type AddFilesFromDirResponse struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Numfiles             int64    `protobuf:"varint,2,opt,name=numfiles,proto3" json:"numfiles,omitempty"`
	Err                  string   `protobuf:"bytes,3,opt,name=err,proto3" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddFilesFromDirResponse) Reset()         { *m = AddFilesFromDirResponse{} }
func (m *AddFilesFromDirResponse) String() string { return proto.CompactTextString(m) }
func (*AddFilesFromDirResponse) ProtoMessage()    {}
func (*AddFilesFromDirResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_33143b984c54841e, []int{9}
}

func (m *AddFilesFromDirResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddFilesFromDirResponse.Unmarshal(m, b)
}
func (m *AddFilesFromDirResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddFilesFromDirResponse.Marshal(b, m, deterministic)
}
func (m *AddFilesFromDirResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddFilesFromDirResponse.Merge(m, src)
}
func (m *AddFilesFromDirResponse) XXX_Size() int {
	return xxx_messageInfo_AddFilesFromDirResponse.Size(m)
}
func (m *AddFilesFromDirResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddFilesFromDirResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddFilesFromDirResponse proto.InternalMessageInfo

func (m *AddFilesFromDirResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *AddFilesFromDirResponse) GetNumfiles() int64 {
	if m != nil {
		return m.Numfiles
	}
	return 0
}

func (m *AddFilesFromDirResponse) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

type AddTarRequest struct {
	Hash                 string   `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Filename             string   `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddTarRequest) Reset()         { *m = AddTarRequest{} }
func (m *AddTarRequest) String() string { return proto.CompactTextString(m) }
func (*AddTarRequest) ProtoMessage()    {}
func (*AddTarRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33143b984c54841e, []int{10}
}

func (m *AddTarRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddTarRequest.Unmarshal(m, b)
}
func (m *AddTarRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddTarRequest.Marshal(b, m, deterministic)
}
func (m *AddTarRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddTarRequest.Merge(m, src)
}
func (m *AddTarRequest) XXX_Size() int {
	return xxx_messageInfo_AddTarRequest.Size(m)
}
func (m *AddTarRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddTarRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddTarRequest proto.InternalMessageInfo

func (m *AddTarRequest) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *AddTarRequest) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

type AddTarResponse struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	ReceivedSize         int64    `protobuf:"varint,2,opt,name=received_size,json=receivedSize,proto3" json:"received_size,omitempty"`
	Path                 string   `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddTarResponse) Reset()         { *m = AddTarResponse{} }
func (m *AddTarResponse) String() string { return proto.CompactTextString(m) }
func (*AddTarResponse) ProtoMessage()    {}
func (*AddTarResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_33143b984c54841e, []int{11}
}

func (m *AddTarResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddTarResponse.Unmarshal(m, b)
}
func (m *AddTarResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddTarResponse.Marshal(b, m, deterministic)
}
func (m *AddTarResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddTarResponse.Merge(m, src)
}
func (m *AddTarResponse) XXX_Size() int {
	return xxx_messageInfo_AddTarResponse.Size(m)
}
func (m *AddTarResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddTarResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddTarResponse proto.InternalMessageInfo

func (m *AddTarResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *AddTarResponse) GetReceivedSize() int64 {
	if m != nil {
		return m.ReceivedSize
	}
	return 0
}

func (m *AddTarResponse) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

type AddTarFromRemoteRequest struct {
	Hash                 string   `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddTarFromRemoteRequest) Reset()         { *m = AddTarFromRemoteRequest{} }
func (m *AddTarFromRemoteRequest) String() string { return proto.CompactTextString(m) }
func (*AddTarFromRemoteRequest) ProtoMessage()    {}
func (*AddTarFromRemoteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33143b984c54841e, []int{12}
}

func (m *AddTarFromRemoteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddTarFromRemoteRequest.Unmarshal(m, b)
}
func (m *AddTarFromRemoteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddTarFromRemoteRequest.Marshal(b, m, deterministic)
}
func (m *AddTarFromRemoteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddTarFromRemoteRequest.Merge(m, src)
}
func (m *AddTarFromRemoteRequest) XXX_Size() int {
	return xxx_messageInfo_AddTarFromRemoteRequest.Size(m)
}
func (m *AddTarFromRemoteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddTarFromRemoteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddTarFromRemoteRequest proto.InternalMessageInfo

func (m *AddTarFromRemoteRequest) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

type AddTarFromRemoteResponse struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	ReceivedSize         int64    `protobuf:"varint,2,opt,name=received_size,json=receivedSize,proto3" json:"received_size,omitempty"`
	Path                 string   `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddTarFromRemoteResponse) Reset()         { *m = AddTarFromRemoteResponse{} }
func (m *AddTarFromRemoteResponse) String() string { return proto.CompactTextString(m) }
func (*AddTarFromRemoteResponse) ProtoMessage()    {}
func (*AddTarFromRemoteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_33143b984c54841e, []int{13}
}

func (m *AddTarFromRemoteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddTarFromRemoteResponse.Unmarshal(m, b)
}
func (m *AddTarFromRemoteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddTarFromRemoteResponse.Marshal(b, m, deterministic)
}
func (m *AddTarFromRemoteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddTarFromRemoteResponse.Merge(m, src)
}
func (m *AddTarFromRemoteResponse) XXX_Size() int {
	return xxx_messageInfo_AddTarFromRemoteResponse.Size(m)
}
func (m *AddTarFromRemoteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddTarFromRemoteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddTarFromRemoteResponse proto.InternalMessageInfo

func (m *AddTarFromRemoteResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *AddTarFromRemoteResponse) GetReceivedSize() int64 {
	if m != nil {
		return m.ReceivedSize
	}
	return 0
}

func (m *AddTarFromRemoteResponse) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

type AddDirToCacheRequest struct {
	Path                 string   `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Scan                 bool     `protobuf:"varint,2,opt,name=scan,proto3" json:"scan,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddDirToCacheRequest) Reset()         { *m = AddDirToCacheRequest{} }
func (m *AddDirToCacheRequest) String() string { return proto.CompactTextString(m) }
func (*AddDirToCacheRequest) ProtoMessage()    {}
func (*AddDirToCacheRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33143b984c54841e, []int{14}
}

func (m *AddDirToCacheRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddDirToCacheRequest.Unmarshal(m, b)
}
func (m *AddDirToCacheRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddDirToCacheRequest.Marshal(b, m, deterministic)
}
func (m *AddDirToCacheRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddDirToCacheRequest.Merge(m, src)
}
func (m *AddDirToCacheRequest) XXX_Size() int {
	return xxx_messageInfo_AddDirToCacheRequest.Size(m)
}
func (m *AddDirToCacheRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddDirToCacheRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddDirToCacheRequest proto.InternalMessageInfo

func (m *AddDirToCacheRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *AddDirToCacheRequest) GetScan() bool {
	if m != nil {
		return m.Scan
	}
	return false
}

type AddDirToCacheResponse struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddDirToCacheResponse) Reset()         { *m = AddDirToCacheResponse{} }
func (m *AddDirToCacheResponse) String() string { return proto.CompactTextString(m) }
func (*AddDirToCacheResponse) ProtoMessage()    {}
func (*AddDirToCacheResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_33143b984c54841e, []int{15}
}

func (m *AddDirToCacheResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddDirToCacheResponse.Unmarshal(m, b)
}
func (m *AddDirToCacheResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddDirToCacheResponse.Marshal(b, m, deterministic)
}
func (m *AddDirToCacheResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddDirToCacheResponse.Merge(m, src)
}
func (m *AddDirToCacheResponse) XXX_Size() int {
	return xxx_messageInfo_AddDirToCacheResponse.Size(m)
}
func (m *AddDirToCacheResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddDirToCacheResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddDirToCacheResponse proto.InternalMessageInfo

func (m *AddDirToCacheResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type AddRequest struct {
	Hash                 string   `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Filename             string   `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`
	LastData             bool     `protobuf:"varint,3,opt,name=last_data,json=lastData,proto3" json:"last_data,omitempty"`
	Data                 []byte   `protobuf:"bytes,10,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddRequest) Reset()         { *m = AddRequest{} }
func (m *AddRequest) String() string { return proto.CompactTextString(m) }
func (*AddRequest) ProtoMessage()    {}
func (*AddRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33143b984c54841e, []int{16}
}

func (m *AddRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddRequest.Unmarshal(m, b)
}
func (m *AddRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddRequest.Marshal(b, m, deterministic)
}
func (m *AddRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddRequest.Merge(m, src)
}
func (m *AddRequest) XXX_Size() int {
	return xxx_messageInfo_AddRequest.Size(m)
}
func (m *AddRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddRequest proto.InternalMessageInfo

func (m *AddRequest) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *AddRequest) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

func (m *AddRequest) GetLastData() bool {
	if m != nil {
		return m.LastData
	}
	return false
}

func (m *AddRequest) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type AddResponse struct {
	ReceivedSize         int64    `protobuf:"varint,1,opt,name=received_size,json=receivedSize,proto3" json:"received_size,omitempty"`
	Path                 string   `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddResponse) Reset()         { *m = AddResponse{} }
func (m *AddResponse) String() string { return proto.CompactTextString(m) }
func (*AddResponse) ProtoMessage()    {}
func (*AddResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_33143b984c54841e, []int{17}
}

func (m *AddResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddResponse.Unmarshal(m, b)
}
func (m *AddResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddResponse.Marshal(b, m, deterministic)
}
func (m *AddResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddResponse.Merge(m, src)
}
func (m *AddResponse) XXX_Size() int {
	return xxx_messageInfo_AddResponse.Size(m)
}
func (m *AddResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddResponse proto.InternalMessageInfo

func (m *AddResponse) GetReceivedSize() int64 {
	if m != nil {
		return m.ReceivedSize
	}
	return 0
}

func (m *AddResponse) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

type GetRequest struct {
	Hash                 string   `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRequest) Reset()         { *m = GetRequest{} }
func (m *GetRequest) String() string { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()    {}
func (*GetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33143b984c54841e, []int{18}
}

func (m *GetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRequest.Unmarshal(m, b)
}
func (m *GetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRequest.Marshal(b, m, deterministic)
}
func (m *GetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRequest.Merge(m, src)
}
func (m *GetRequest) XXX_Size() int {
	return xxx_messageInfo_GetRequest.Size(m)
}
func (m *GetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRequest proto.InternalMessageInfo

func (m *GetRequest) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

type GetResponse struct {
	SentSize             int64    `protobuf:"varint,1,opt,name=sent_size,json=sentSize,proto3" json:"sent_size,omitempty"`
	Data                 []byte   `protobuf:"bytes,10,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetResponse) Reset()         { *m = GetResponse{} }
func (m *GetResponse) String() string { return proto.CompactTextString(m) }
func (*GetResponse) ProtoMessage()    {}
func (*GetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_33143b984c54841e, []int{19}
}

func (m *GetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetResponse.Unmarshal(m, b)
}
func (m *GetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetResponse.Marshal(b, m, deterministic)
}
func (m *GetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetResponse.Merge(m, src)
}
func (m *GetResponse) XXX_Size() int {
	return xxx_messageInfo_GetResponse.Size(m)
}
func (m *GetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetResponse proto.InternalMessageInfo

func (m *GetResponse) GetSentSize() int64 {
	if m != nil {
		return m.SentSize
	}
	return 0
}

func (m *GetResponse) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

// rpc GetPath
type PathRequest struct {
	Hash                 string   `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	LocalOnly            bool     `protobuf:"varint,2,opt,name=localOnly,proto3" json:"localOnly,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PathRequest) Reset()         { *m = PathRequest{} }
func (m *PathRequest) String() string { return proto.CompactTextString(m) }
func (*PathRequest) ProtoMessage()    {}
func (*PathRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33143b984c54841e, []int{20}
}

func (m *PathRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PathRequest.Unmarshal(m, b)
}
func (m *PathRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PathRequest.Marshal(b, m, deterministic)
}
func (m *PathRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PathRequest.Merge(m, src)
}
func (m *PathRequest) XXX_Size() int {
	return xxx_messageInfo_PathRequest.Size(m)
}
func (m *PathRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PathRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PathRequest proto.InternalMessageInfo

func (m *PathRequest) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *PathRequest) GetLocalOnly() bool {
	if m != nil {
		return m.LocalOnly
	}
	return false
}

type PathResponse struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Path                 string   `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Err                  *Err     `protobuf:"bytes,3,opt,name=err,proto3" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PathResponse) Reset()         { *m = PathResponse{} }
func (m *PathResponse) String() string { return proto.CompactTextString(m) }
func (*PathResponse) ProtoMessage()    {}
func (*PathResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_33143b984c54841e, []int{21}
}

func (m *PathResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PathResponse.Unmarshal(m, b)
}
func (m *PathResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PathResponse.Marshal(b, m, deterministic)
}
func (m *PathResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PathResponse.Merge(m, src)
}
func (m *PathResponse) XXX_Size() int {
	return xxx_messageInfo_PathResponse.Size(m)
}
func (m *PathResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PathResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PathResponse proto.InternalMessageInfo

func (m *PathResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *PathResponse) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *PathResponse) GetErr() *Err {
	if m != nil {
		return m.Err
	}
	return nil
}

func init() {
	proto.RegisterType((*RegisterFileRequest)(nil), "cruxgen.RegisterFileRequest")
	proto.RegisterType((*RegisterFileResponse)(nil), "cruxgen.RegisterFileResponse")
	proto.RegisterType((*ReserveRequest)(nil), "cruxgen.ReserveRequest")
	proto.RegisterType((*ReserveResponse)(nil), "cruxgen.ReserveResponse")
	proto.RegisterType((*DeleteRequest)(nil), "cruxgen.DeleteRequest")
	proto.RegisterType((*DeleteResponse)(nil), "cruxgen.DeleteResponse")
	proto.RegisterType((*DeleteAllRequest)(nil), "cruxgen.DeleteAllRequest")
	proto.RegisterType((*DeleteAllResponse)(nil), "cruxgen.DeleteAllResponse")
	proto.RegisterType((*AddFilesFromDirRequest)(nil), "cruxgen.AddFilesFromDirRequest")
	proto.RegisterType((*AddFilesFromDirResponse)(nil), "cruxgen.AddFilesFromDirResponse")
	proto.RegisterType((*AddTarRequest)(nil), "cruxgen.AddTarRequest")
	proto.RegisterType((*AddTarResponse)(nil), "cruxgen.AddTarResponse")
	proto.RegisterType((*AddTarFromRemoteRequest)(nil), "cruxgen.AddTarFromRemoteRequest")
	proto.RegisterType((*AddTarFromRemoteResponse)(nil), "cruxgen.AddTarFromRemoteResponse")
	proto.RegisterType((*AddDirToCacheRequest)(nil), "cruxgen.AddDirToCacheRequest")
	proto.RegisterType((*AddDirToCacheResponse)(nil), "cruxgen.AddDirToCacheResponse")
	proto.RegisterType((*AddRequest)(nil), "cruxgen.AddRequest")
	proto.RegisterType((*AddResponse)(nil), "cruxgen.AddResponse")
	proto.RegisterType((*GetRequest)(nil), "cruxgen.GetRequest")
	proto.RegisterType((*GetResponse)(nil), "cruxgen.GetResponse")
	proto.RegisterType((*PathRequest)(nil), "cruxgen.PathRequest")
	proto.RegisterType((*PathResponse)(nil), "cruxgen.PathResponse")
}

func init() { proto.RegisterFile("srv_pastiche.proto", fileDescriptor_33143b984c54841e) }

var fileDescriptor_33143b984c54841e = []byte{
	// 788 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x56, 0x6f, 0x6f, 0xda, 0x3e,
	0x10, 0x86, 0x1f, 0x55, 0x49, 0x0e, 0x68, 0xfb, 0x73, 0xff, 0xb1, 0xf4, 0xcf, 0x98, 0xfb, 0xa6,
	0xaa, 0xd4, 0x6a, 0xeb, 0xde, 0x4c, 0x9a, 0x4a, 0x85, 0xc6, 0xda, 0xbd, 0x99, 0x86, 0x52, 0x34,
	0x69, 0xd2, 0xa4, 0xca, 0x4d, 0x3c, 0x88, 0x14, 0x02, 0xb5, 0x0d, 0x5a, 0xfb, 0x01, 0xf6, 0xb9,
	0x27, 0x3b, 0x89, 0x31, 0x04, 0xc2, 0x34, 0x69, 0xef, 0xce, 0x8f, 0x9f, 0x3b, 0x3f, 0xb9, 0x3b,
	0xee, 0x00, 0xc4, 0xd9, 0xe4, 0x7e, 0x44, 0xb8, 0x08, 0xbc, 0x3e, 0xbd, 0x18, 0xb1, 0xa1, 0x18,
	0xa2, 0xb2, 0xc7, 0xc6, 0x3f, 0x7b, 0x34, 0x72, 0x36, 0xfb, 0x94, 0x30, 0xf1, 0x40, 0x89, 0x88,
	0x6f, 0x1c, 0x18, 0x05, 0x51, 0x2f, 0xb1, 0x6d, 0xca, 0x58, 0x6c, 0xe2, 0x2b, 0xd8, 0x76, 0x69,
	0x2f, 0xe0, 0x82, 0xb2, 0x9b, 0x20, 0xa4, 0x2e, 0x7d, 0x1c, 0x53, 0x2e, 0x10, 0x82, 0xb5, 0x3e,
	0xe1, 0xfd, 0x7a, 0xb1, 0x51, 0x3c, 0xb5, 0x5d, 0x65, 0x4b, 0x6c, 0x44, 0x44, 0xbf, 0xfe, 0x5f,
	0x8c, 0x49, 0x1b, 0x77, 0x60, 0x67, 0xd6, 0x9d, 0x8f, 0x86, 0x11, 0xa7, 0xa8, 0x0e, 0x65, 0x3e,
	0xf6, 0x3c, 0xca, 0xb9, 0x0a, 0x61, 0xb9, 0xe9, 0x11, 0x1d, 0x43, 0x89, 0x32, 0xa6, 0x82, 0x54,
	0x2e, 0xab, 0x17, 0x89, 0xde, 0x8b, 0x8f, 0x8c, 0xb9, 0xf2, 0x02, 0x37, 0x61, 0xc3, 0xa5, 0x9c,
	0xb2, 0x49, 0xae, 0x96, 0x3a, 0x94, 0x59, 0xcc, 0x52, 0x91, 0x2c, 0x37, 0x3d, 0xe2, 0x6b, 0xd8,
	0xd4, 0xfe, 0x2b, 0xc5, 0x20, 0x58, 0x13, 0xc1, 0x20, 0x8e, 0x51, 0x72, 0x95, 0x8d, 0x4f, 0xa0,
	0xd6, 0xa6, 0x21, 0x15, 0x79, 0xef, 0xe3, 0x33, 0xd8, 0x48, 0x49, 0xab, 0x1e, 0xc1, 0x08, 0xb6,
	0x62, 0x6e, 0x2b, 0x0c, 0x93, 0x98, 0xf8, 0x1c, 0xfe, 0x37, 0xb0, 0x95, 0x21, 0x2e, 0x61, 0xaf,
	0xe5, 0xfb, 0x32, 0xc3, 0xfc, 0x86, 0x0d, 0x07, 0xed, 0x80, 0xa5, 0xe2, 0xea, 0x50, 0xf6, 0x03,
	0xa6, 0xea, 0x12, 0xeb, 0x4b, 0x8f, 0x98, 0xc0, 0x7e, 0xc6, 0x67, 0x65, 0x42, 0x1c, 0xb0, 0xa2,
	0xf1, 0xe0, 0x87, 0x74, 0x4a, 0x92, 0xa2, 0xcf, 0x68, 0x2b, 0xae, 0x5c, 0x49, 0x3d, 0xa3, 0x6a,
	0x75, 0x0d, 0xb5, 0x96, 0xef, 0x77, 0x09, 0xcb, 0x2b, 0x95, 0x03, 0x96, 0xf4, 0x8f, 0x48, 0x92,
	0x67, 0xdb, 0xd5, 0x67, 0xec, 0xc1, 0x46, 0x1a, 0x60, 0xa5, 0xb4, 0x13, 0xa8, 0x31, 0xea, 0xd1,
	0x60, 0x42, 0xfd, 0x7b, 0x1e, 0x3c, 0xa7, 0x45, 0xab, 0xa6, 0xe0, 0x5d, 0xf0, 0x4c, 0x75, 0x8f,
	0x96, 0x8c, 0x1e, 0x3d, 0x57, 0x89, 0xe8, 0x12, 0x26, 0xd3, 0xe0, 0xd2, 0xc1, 0x30, 0xbf, 0xb4,
	0x03, 0xa8, 0x67, 0xe9, 0xff, 0x4e, 0x5d, 0x13, 0x76, 0x5a, 0xbe, 0xdf, 0x0e, 0x58, 0x77, 0xf8,
	0x81, 0x78, 0x7d, 0x53, 0x9a, 0x51, 0x55, 0x65, 0x4b, 0x8c, 0x7b, 0x24, 0x4a, 0x5a, 0x5e, 0xd9,
	0xf8, 0x0d, 0xec, 0xce, 0xf9, 0xaf, 0xec, 0xa6, 0x01, 0x40, 0xcb, 0xf7, 0xff, 0xb2, 0x66, 0xe8,
	0x00, 0xec, 0x90, 0x70, 0x71, 0xef, 0x13, 0x41, 0xd4, 0x97, 0x58, 0xae, 0x25, 0x81, 0x36, 0x11,
	0x44, 0x06, 0x53, 0x38, 0x34, 0x8a, 0xa7, 0x55, 0x57, 0xd9, 0xf8, 0x06, 0x2a, 0xea, 0xb9, 0x44,
	0x57, 0x26, 0x53, 0xc5, 0x9c, 0x4c, 0x99, 0xb3, 0xa6, 0x01, 0x70, 0x4b, 0x45, 0x5e, 0xe9, 0x9a,
	0x50, 0x51, 0x8c, 0xe4, 0xa5, 0x03, 0xb0, 0x39, 0x8d, 0x84, 0xf9, 0x8a, 0x25, 0x81, 0xf4, 0x85,
	0x8c, 0xd2, 0x6b, 0xa8, 0x74, 0x88, 0xe8, 0xe7, 0x65, 0xe6, 0x10, 0xec, 0x70, 0xe8, 0x91, 0xf0,
	0x4b, 0x14, 0x3e, 0x25, 0x75, 0x98, 0x02, 0xf8, 0x3b, 0x54, 0xe3, 0x00, 0x7f, 0x32, 0x79, 0xe6,
	0x3f, 0x30, 0x1d, 0x8d, 0xa5, 0x25, 0xa3, 0xf1, 0xf2, 0x57, 0x59, 0xea, 0x8b, 0xe7, 0xfd, 0x1d,
	0x9b, 0xa0, 0x33, 0xb0, 0x3a, 0x41, 0xd4, 0xeb, 0x4a, 0xad, 0x35, 0x4d, 0x97, 0x90, 0x33, 0x7b,
	0xc4, 0x05, 0xd4, 0x54, 0x3f, 0x55, 0x59, 0xa3, 0x3b, 0xc1, 0x28, 0x19, 0xa0, 0x6d, 0xcd, 0x98,
	0xf6, 0x82, 0xb3, 0x33, 0x0b, 0xc6, 0x5f, 0x81, 0x0b, 0xa7, 0x45, 0xe9, 0x7f, 0x4b, 0xc5, 0x42,
	0xff, 0x69, 0x51, 0x0c, 0x7f, 0xa3, 0x0e, 0xb8, 0xf0, 0xba, 0x88, 0xde, 0x41, 0xf9, 0x96, 0x0a,
	0x99, 0x1c, 0x34, 0x25, 0x19, 0xc9, 0x76, 0x76, 0xe7, 0xd0, 0xd4, 0x17, 0x7d, 0x86, 0xaa, 0xb9,
	0x62, 0xd0, 0xa1, 0x26, 0x2e, 0x58, 0x5c, 0xce, 0xd1, 0x92, 0x5b, 0x1d, 0xae, 0x09, 0xe5, 0x64,
	0x3f, 0xa0, 0x7d, 0x83, 0x6b, 0x6e, 0x1c, 0xa7, 0x9e, 0xbd, 0xd0, 0xfe, 0xef, 0x61, 0x3d, 0x9e,
	0xdc, 0x68, 0x4f, 0xb3, 0x66, 0xf6, 0x85, 0xb3, 0x9f, 0xc1, 0xb5, 0x73, 0x1b, 0x6c, 0x3d, 0xf6,
	0xd1, 0x8b, 0x39, 0xde, 0x74, 0x3d, 0x38, 0xce, 0xa2, 0x2b, 0x53, 0x42, 0x3c, 0xa1, 0x0c, 0x09,
	0x33, 0x73, 0xd8, 0x90, 0x30, 0x3b, 0x5e, 0x71, 0x01, 0x7d, 0x83, 0xad, 0xf9, 0xf1, 0x86, 0x1a,
	0x73, 0xf4, 0xcc, 0xa0, 0x74, 0x5e, 0xe5, 0x30, 0x74, 0xe8, 0x4e, 0xdc, 0x63, 0x7a, 0x14, 0xa1,
	0x23, 0xd3, 0x2b, 0x33, 0xe2, 0x9c, 0xe3, 0x65, 0xd7, 0x3a, 0xe2, 0x57, 0xd8, 0x9c, 0xdb, 0x61,
	0xe8, 0xa5, 0xe9, 0xb4, 0x60, 0x23, 0x3a, 0x8d, 0xe5, 0x04, 0x1d, 0xf7, 0x0a, 0xec, 0x4f, 0xe9,
	0xff, 0x23, 0x34, 0xed, 0x3c, 0x8d, 0xb9, 0xf4, 0xd1, 0xc8, 0xa1, 0x01, 0x8f, 0xc2, 0x27, 0x5c,
	0x78, 0x58, 0x57, 0xff, 0x9d, 0xde, 0xfe, 0x0e, 0x00, 0x00, 0xff, 0xff, 0xfe, 0x40, 0xe2, 0xcb,
	0x82, 0x09, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PasticheSrvClient is the client API for PasticheSrv service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PasticheSrvClient interface {
	PingTest(ctx context.Context, in *Ping, opts ...grpc.CallOption) (*Ping, error)
	AddDataStream(ctx context.Context, opts ...grpc.CallOption) (PasticheSrv_AddDataStreamClient, error)
	GetDataStream(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (PasticheSrv_GetDataStreamClient, error)
	GetPath(ctx context.Context, in *PathRequest, opts ...grpc.CallOption) (*PathResponse, error)
	RegisterFile(ctx context.Context, in *RegisterFileRequest, opts ...grpc.CallOption) (*RegisterFileResponse, error)
	Reserve(ctx context.Context, in *ReserveRequest, opts ...grpc.CallOption) (*ReserveResponse, error)
	Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*DeleteResponse, error)
	DeleteAll(ctx context.Context, in *DeleteAllRequest, opts ...grpc.CallOption) (*DeleteAllResponse, error)
	AddTar(ctx context.Context, in *AddTarRequest, opts ...grpc.CallOption) (*AddTarResponse, error)
	AddTarFromRemote(ctx context.Context, in *AddTarFromRemoteRequest, opts ...grpc.CallOption) (*AddTarFromRemoteResponse, error)
	AddDirToCache(ctx context.Context, in *AddDirToCacheRequest, opts ...grpc.CallOption) (*AddDirToCacheResponse, error)
	AddFilesFromDir(ctx context.Context, in *AddFilesFromDirRequest, opts ...grpc.CallOption) (*AddFilesFromDirResponse, error)
	Heartbeat(ctx context.Context, in *HeartbeatReq, opts ...grpc.CallOption) (*HeartbeatReply, error)
}

type pasticheSrvClient struct {
	cc *grpc.ClientConn
}

func NewPasticheSrvClient(cc *grpc.ClientConn) PasticheSrvClient {
	return &pasticheSrvClient{cc}
}

func (c *pasticheSrvClient) PingTest(ctx context.Context, in *Ping, opts ...grpc.CallOption) (*Ping, error) {
	out := new(Ping)
	err := c.cc.Invoke(ctx, "/cruxgen.PasticheSrv/PingTest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pasticheSrvClient) AddDataStream(ctx context.Context, opts ...grpc.CallOption) (PasticheSrv_AddDataStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_PasticheSrv_serviceDesc.Streams[0], "/cruxgen.PasticheSrv/AddDataStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &pasticheSrvAddDataStreamClient{stream}
	return x, nil
}

type PasticheSrv_AddDataStreamClient interface {
	Send(*AddRequest) error
	CloseAndRecv() (*AddResponse, error)
	grpc.ClientStream
}

type pasticheSrvAddDataStreamClient struct {
	grpc.ClientStream
}

func (x *pasticheSrvAddDataStreamClient) Send(m *AddRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *pasticheSrvAddDataStreamClient) CloseAndRecv() (*AddResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(AddResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *pasticheSrvClient) GetDataStream(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (PasticheSrv_GetDataStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_PasticheSrv_serviceDesc.Streams[1], "/cruxgen.PasticheSrv/GetDataStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &pasticheSrvGetDataStreamClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type PasticheSrv_GetDataStreamClient interface {
	Recv() (*GetResponse, error)
	grpc.ClientStream
}

type pasticheSrvGetDataStreamClient struct {
	grpc.ClientStream
}

func (x *pasticheSrvGetDataStreamClient) Recv() (*GetResponse, error) {
	m := new(GetResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *pasticheSrvClient) GetPath(ctx context.Context, in *PathRequest, opts ...grpc.CallOption) (*PathResponse, error) {
	out := new(PathResponse)
	err := c.cc.Invoke(ctx, "/cruxgen.PasticheSrv/GetPath", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pasticheSrvClient) RegisterFile(ctx context.Context, in *RegisterFileRequest, opts ...grpc.CallOption) (*RegisterFileResponse, error) {
	out := new(RegisterFileResponse)
	err := c.cc.Invoke(ctx, "/cruxgen.PasticheSrv/RegisterFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pasticheSrvClient) Reserve(ctx context.Context, in *ReserveRequest, opts ...grpc.CallOption) (*ReserveResponse, error) {
	out := new(ReserveResponse)
	err := c.cc.Invoke(ctx, "/cruxgen.PasticheSrv/Reserve", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pasticheSrvClient) Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*DeleteResponse, error) {
	out := new(DeleteResponse)
	err := c.cc.Invoke(ctx, "/cruxgen.PasticheSrv/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pasticheSrvClient) DeleteAll(ctx context.Context, in *DeleteAllRequest, opts ...grpc.CallOption) (*DeleteAllResponse, error) {
	out := new(DeleteAllResponse)
	err := c.cc.Invoke(ctx, "/cruxgen.PasticheSrv/DeleteAll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pasticheSrvClient) AddTar(ctx context.Context, in *AddTarRequest, opts ...grpc.CallOption) (*AddTarResponse, error) {
	out := new(AddTarResponse)
	err := c.cc.Invoke(ctx, "/cruxgen.PasticheSrv/AddTar", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pasticheSrvClient) AddTarFromRemote(ctx context.Context, in *AddTarFromRemoteRequest, opts ...grpc.CallOption) (*AddTarFromRemoteResponse, error) {
	out := new(AddTarFromRemoteResponse)
	err := c.cc.Invoke(ctx, "/cruxgen.PasticheSrv/AddTarFromRemote", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pasticheSrvClient) AddDirToCache(ctx context.Context, in *AddDirToCacheRequest, opts ...grpc.CallOption) (*AddDirToCacheResponse, error) {
	out := new(AddDirToCacheResponse)
	err := c.cc.Invoke(ctx, "/cruxgen.PasticheSrv/AddDirToCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pasticheSrvClient) AddFilesFromDir(ctx context.Context, in *AddFilesFromDirRequest, opts ...grpc.CallOption) (*AddFilesFromDirResponse, error) {
	out := new(AddFilesFromDirResponse)
	err := c.cc.Invoke(ctx, "/cruxgen.PasticheSrv/AddFilesFromDir", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pasticheSrvClient) Heartbeat(ctx context.Context, in *HeartbeatReq, opts ...grpc.CallOption) (*HeartbeatReply, error) {
	out := new(HeartbeatReply)
	err := c.cc.Invoke(ctx, "/cruxgen.PasticheSrv/Heartbeat", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PasticheSrvServer is the server API for PasticheSrv service.
type PasticheSrvServer interface {
	PingTest(context.Context, *Ping) (*Ping, error)
	AddDataStream(PasticheSrv_AddDataStreamServer) error
	GetDataStream(*GetRequest, PasticheSrv_GetDataStreamServer) error
	GetPath(context.Context, *PathRequest) (*PathResponse, error)
	RegisterFile(context.Context, *RegisterFileRequest) (*RegisterFileResponse, error)
	Reserve(context.Context, *ReserveRequest) (*ReserveResponse, error)
	Delete(context.Context, *DeleteRequest) (*DeleteResponse, error)
	DeleteAll(context.Context, *DeleteAllRequest) (*DeleteAllResponse, error)
	AddTar(context.Context, *AddTarRequest) (*AddTarResponse, error)
	AddTarFromRemote(context.Context, *AddTarFromRemoteRequest) (*AddTarFromRemoteResponse, error)
	AddDirToCache(context.Context, *AddDirToCacheRequest) (*AddDirToCacheResponse, error)
	AddFilesFromDir(context.Context, *AddFilesFromDirRequest) (*AddFilesFromDirResponse, error)
	Heartbeat(context.Context, *HeartbeatReq) (*HeartbeatReply, error)
}

func RegisterPasticheSrvServer(s *grpc.Server, srv PasticheSrvServer) {
	s.RegisterService(&_PasticheSrv_serviceDesc, srv)
}

func _PasticheSrv_PingTest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Ping)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PasticheSrvServer).PingTest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cruxgen.PasticheSrv/PingTest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PasticheSrvServer).PingTest(ctx, req.(*Ping))
	}
	return interceptor(ctx, in, info, handler)
}

func _PasticheSrv_AddDataStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(PasticheSrvServer).AddDataStream(&pasticheSrvAddDataStreamServer{stream})
}

type PasticheSrv_AddDataStreamServer interface {
	SendAndClose(*AddResponse) error
	Recv() (*AddRequest, error)
	grpc.ServerStream
}

type pasticheSrvAddDataStreamServer struct {
	grpc.ServerStream
}

func (x *pasticheSrvAddDataStreamServer) SendAndClose(m *AddResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *pasticheSrvAddDataStreamServer) Recv() (*AddRequest, error) {
	m := new(AddRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _PasticheSrv_GetDataStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(PasticheSrvServer).GetDataStream(m, &pasticheSrvGetDataStreamServer{stream})
}

type PasticheSrv_GetDataStreamServer interface {
	Send(*GetResponse) error
	grpc.ServerStream
}

type pasticheSrvGetDataStreamServer struct {
	grpc.ServerStream
}

func (x *pasticheSrvGetDataStreamServer) Send(m *GetResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _PasticheSrv_GetPath_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PathRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PasticheSrvServer).GetPath(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cruxgen.PasticheSrv/GetPath",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PasticheSrvServer).GetPath(ctx, req.(*PathRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PasticheSrv_RegisterFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterFileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PasticheSrvServer).RegisterFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cruxgen.PasticheSrv/RegisterFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PasticheSrvServer).RegisterFile(ctx, req.(*RegisterFileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PasticheSrv_Reserve_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReserveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PasticheSrvServer).Reserve(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cruxgen.PasticheSrv/Reserve",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PasticheSrvServer).Reserve(ctx, req.(*ReserveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PasticheSrv_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PasticheSrvServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cruxgen.PasticheSrv/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PasticheSrvServer).Delete(ctx, req.(*DeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PasticheSrv_DeleteAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteAllRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PasticheSrvServer).DeleteAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cruxgen.PasticheSrv/DeleteAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PasticheSrvServer).DeleteAll(ctx, req.(*DeleteAllRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PasticheSrv_AddTar_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddTarRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PasticheSrvServer).AddTar(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cruxgen.PasticheSrv/AddTar",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PasticheSrvServer).AddTar(ctx, req.(*AddTarRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PasticheSrv_AddTarFromRemote_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddTarFromRemoteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PasticheSrvServer).AddTarFromRemote(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cruxgen.PasticheSrv/AddTarFromRemote",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PasticheSrvServer).AddTarFromRemote(ctx, req.(*AddTarFromRemoteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PasticheSrv_AddDirToCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddDirToCacheRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PasticheSrvServer).AddDirToCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cruxgen.PasticheSrv/AddDirToCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PasticheSrvServer).AddDirToCache(ctx, req.(*AddDirToCacheRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PasticheSrv_AddFilesFromDir_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddFilesFromDirRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PasticheSrvServer).AddFilesFromDir(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cruxgen.PasticheSrv/AddFilesFromDir",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PasticheSrvServer).AddFilesFromDir(ctx, req.(*AddFilesFromDirRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PasticheSrv_Heartbeat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HeartbeatReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PasticheSrvServer).Heartbeat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cruxgen.PasticheSrv/Heartbeat",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PasticheSrvServer).Heartbeat(ctx, req.(*HeartbeatReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _PasticheSrv_serviceDesc = grpc.ServiceDesc{
	ServiceName: "cruxgen.PasticheSrv",
	HandlerType: (*PasticheSrvServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PingTest",
			Handler:    _PasticheSrv_PingTest_Handler,
		},
		{
			MethodName: "GetPath",
			Handler:    _PasticheSrv_GetPath_Handler,
		},
		{
			MethodName: "RegisterFile",
			Handler:    _PasticheSrv_RegisterFile_Handler,
		},
		{
			MethodName: "Reserve",
			Handler:    _PasticheSrv_Reserve_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _PasticheSrv_Delete_Handler,
		},
		{
			MethodName: "DeleteAll",
			Handler:    _PasticheSrv_DeleteAll_Handler,
		},
		{
			MethodName: "AddTar",
			Handler:    _PasticheSrv_AddTar_Handler,
		},
		{
			MethodName: "AddTarFromRemote",
			Handler:    _PasticheSrv_AddTarFromRemote_Handler,
		},
		{
			MethodName: "AddDirToCache",
			Handler:    _PasticheSrv_AddDirToCache_Handler,
		},
		{
			MethodName: "AddFilesFromDir",
			Handler:    _PasticheSrv_AddFilesFromDir_Handler,
		},
		{
			MethodName: "Heartbeat",
			Handler:    _PasticheSrv_Heartbeat_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "AddDataStream",
			Handler:       _PasticheSrv_AddDataStream_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "GetDataStream",
			Handler:       _PasticheSrv_GetDataStream_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "srv_pastiche.proto",
}
