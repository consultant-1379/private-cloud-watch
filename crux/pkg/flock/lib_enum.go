package flock

// DO NOT EDIT THIS FILE!! this is code generated by enumerator

import "fmt"

// KeyCount is the kind of KC error.
type KeyCount int

// define the various symbolic constants for type KeyCount
const (
	KCOffer      KeyCount = 0
	KCOfferFail  KeyCount = 1
	KCOfferGlare KeyCount = 2
	KCResp       KeyCount = 3
	KCRespFail   KeyCount = 4
	KCDataResp   KeyCount = 5
	KCData       KeyCount = 6
	KCDataPrev   KeyCount = 7
	KCDataNoKey  KeyCount = 8
	KCDataFail   KeyCount = 9
	KCUnmarshal  KeyCount = 10
	KCMax        KeyCount = 11
)

// String converts KeyCount values into strings.
func (x KeyCount) String() string {
	switch x {
	case KCData:
		return "KCData"
	case KCDataFail:
		return "KCDataFail"
	case KCDataNoKey:
		return "KCDataNoKey"
	case KCDataPrev:
		return "KCDataPrev"
	case KCDataResp:
		return "KCDataResp"
	case KCMax:
		return "KCMax"
	case KCOffer:
		return "KCOffer"
	case KCOfferFail:
		return "KCOfferFail"
	case KCOfferGlare:
		return "KCOfferGlare"
	case KCResp:
		return "KCResp"
	case KCRespFail:
		return "KCRespFail"
	case KCUnmarshal:
		return "KCUnmarshal"
	}
	return fmt.Sprintf("unknown_KeyCount_%d", x)
}
