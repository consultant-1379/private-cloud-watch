[tox]
minversion = 3.0.0
envlist = py27, linters
[testenv]
deps =
    mock
    pytest
    requests
    coverage
commands=
    coverage run --parallel-mode -m pytest {posargs}
    coverage combine
    coverage report -m
    coverage html
# Run tests without coverage reporting
[testenv:nocoverage]
deps =
    mock
    pytest
commands =
    pip3 list
    python3 -m pytest tests/ {posargs}
[testenv:clean]
skip_install = true
usedevelop = false
deps =
    coverage
commands =
    coverage erase
# Linters
[testenv:flake8]
basepython = python2.7
skip_install = true
deps =
    pydocstyle==3.0.0
    flake8
    flake8-docstrings>=0.2.7
    flake8-import-order>=0.9
    pep8-naming
    flake8-colors
commands =
    flake8 src --ignore=D100,D203,W504 \
    && flake8 tests --ignore=D100,D101,D102,D107,D203,W504
# Linters
[testenv:pylint]
basepython = python2.7
skip_install = true
deps =
    pyflakes
    pylint
commands =
    pylint cm_sync_threshold.py
[testenv:linters]
basepython = python2.7
skip_install = true
deps =
    {[testenv:flake8]deps}
    {[testenv:pylint]deps}
commands =
    {[testenv:flake8]commands}
    {[testenv:pylint]commands}
[testenv:bandit]
basepython = python2.7
skip_install = true
deps =
    bandit
commands =
    bandit -r cli -c .bandit.yml
# Release tooling
[testenv:build]
basepython = python2.7
skip_install = true
deps =
    wheel
    setuptools
commands =
    python setup.py -q sdist bdist_wheel
[testenv:docs]
deps = docutils
whitelist_externals = epydoc
description = "Invoke epydoc to build the HTML docs as specified by .epydoc_config file."
commands = epydoc --config=.epydoc_config --debug -v
# Flake8 Configuration
[flake8]
exclude =
    .pytest_cache
    .tox,
    .git,
    __pycache__,
    build,
    dist,
    *.pyc,
    *.egg-info,
    .cache,
    .eggs
max-line-length = 100
max-complexity = 10
import-order-style = google
application-import-names = cli
format = ${cyan}%(path)s${reset}:${yellow_bold}%(row)d${reset}:${green_bold}%(col)d${reset}: ${red_bold}%(code)s${reset} %(text)s
